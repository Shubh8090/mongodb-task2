I have created a database named guvi and have the following Collections in it;

db.users.insertMany([{"userId":1,"user_name":"user1","email":"user1@gmail.com","batch":48,"codekata_solved":[1,2,3]},
{"userId":2,"user_name":"user2","email":"user2@gmail.com","batch":48,"codekata_solved":[2,3]},
{"userId":3,"user_name":"user3","email":"user3@gmail.com","batch":48,"codekata_solved":[3,5]},
{"userId":4,"user_name":"user4","email":"user4@gmail.com","batch":48,"codekata_solved":[1,2,3,4]},
{"userId":5,"user_name":"user5","email":"user5@gmail.com","batch":48,"codekata_solved":[4,5]}]);

db.users.find();
[
  {
    _id: ObjectId("64cc7b6bab9ff5bd09f99b4c"),
    userId: 1,
    user_name: 'user1',
    email: 'user1@gmail.com',
    batch: 48,
    codekata_solved: [ 1, 2, 3 ]
  },
  {
    _id: ObjectId("64cc7b6bab9ff5bd09f99b4d"),
    userId: 2,
    user_name: 'user2',
    email: 'user2@gmail.com',
    batch: 48,
    codekata_solved: [ 2, 3 ]
  },
  {
    _id: ObjectId("64cc7b6bab9ff5bd09f99b4e"),
    userId: 3,
    user_name: 'user3',
    email: 'user3@gmail.com',
    batch: 48,
    codekata_solved: [ 3, 5 ]
  },
  {
    _id: ObjectId("64cc7b6bab9ff5bd09f99b4f"),
    userId: 4,
    user_name: 'user4',
    email: 'user4@gmail.com',
    batch: 48,
    codekata_solved: [ 1, 2, 3, 4 ]
  },
  {
    _id: ObjectId("64cc7b6bab9ff5bd09f99b50"),
    userId: 5,
    user_name: 'user5',
    email: 'user5@gmail.com',
    batch: 48,
    codekata_solved: [ 4, 5 ]
  }
]


db.codekata.insertMany([{"id":1,"catagory":"Input/Output","description":"Write a code to get the input in the given format and print the output in the given format."},
{"id":2,"catagory":"absolute beginner","description":"Write a program to get a string as input and reverse the string without using temporary variable."},
{"id":3,"catagory":"Array","description":"Given a string 'S' swap the even and odd characters starting from index 1(Assume the index starts from 0)."},
{"id":4,"catagory":"strings","description":"Given a number N and an array of N strings, sort the strings based on the number of vowels in each of the strings in descending order."},
{"id":5,"catagory":"Input/Output","description":"Write a code to get the input in the given format and print the output in the given format."}]);

db.codekata.find();
[
  {
    _id: ObjectId("64cc7d54ab9ff5bd09f99b51"),
    id: 1,
    catagory: 'Input/Output',
    description: 'Write a code to get the input in the given format and print the output in the given format.'
  },
  {
    _id: ObjectId("64cc7d54ab9ff5bd09f99b52"),
    id: 2,
    catagory: 'absolute beginner',
    description: 'Write a program to get a string as input and reverse the string without using temporary variable.'
  },
  {
    _id: ObjectId("64cc7d54ab9ff5bd09f99b53"),
    id: 3,
    catagory: 'Array',
    description: "Given a string 'S' swap the even and odd characters starting from index 1(Assume the index starts from 0)."
  },
  {
    _id: ObjectId("64cc7d54ab9ff5bd09f99b54"),
    id: 4,
    catagory: 'strings',
    description: 'Given a number N and an array of N strings, sort the strings based on the number of vowels in each of the strings in descending order.'
  },
  {
    _id: ObjectId("64cc7d54ab9ff5bd09f99b55"),
    id: 5,
    catagory: 'Input/Output',
    description: 'Write a code to get the input in the given format and print the output in the given format.'
  }
]


db.attendance.insertMany([{"id":1,"date":new Date("2020-10-15"),"present":[1,2,4],"absent":[3,5]},
{"id":2,"date":new Date("2020-10-16"),"present":[2,3,4,5],"absent":[1]},
{"id":3,"date":new Date("2020-10-17"),"present":[1,3,4,5],"absent":[2]},
{"id":4,"date":new Date("2020-10-18"),"present":[1,2,3,5],"absent":[4]},
{"id":5,"date":new Date("2020-10-19"),"present":[1,2,4,5],"absent":[3]}]);

db.attendance.find();
[
  {
    _id: ObjectId("64cc7f7dab9ff5bd09f99b56"),
    id: 1,
    date: ISODate("2020-10-15T00:00:00.000Z"),
    present: [ 1, 2, 4 ],
    absent: [ 3, 5 ]
  },
  {
    _id: ObjectId("64cc7f7dab9ff5bd09f99b57"),
    id: 2,
    date: ISODate("2020-10-16T00:00:00.000Z"),
    present: [ 2, 3, 4, 5 ],
    absent: [ 1 ]
  },
  {
    _id: ObjectId("64cc7f7dab9ff5bd09f99b58"),
    id: 3,
    date: ISODate("2020-10-17T00:00:00.000Z"),
    present: [ 1, 3, 4, 5 ],
    absent: [ 2 ]
  },
  {
    _id: ObjectId("64cc7f7dab9ff5bd09f99b59"),
    id: 4,
    date: ISODate("2020-10-18T00:00:00.000Z"),
    present: [ 1, 2, 3, 5 ],
    absent: [ 4 ]
  },
  {
    _id: ObjectId("64cc7f7dab9ff5bd09f99b5a"),
    id: 5,
    date: ISODate("2020-10-19T00:00:00.000Z"),
    present: [ 1, 2, 4, 5 ],
    absent: [ 3 ]
  }
]


db.topics.insertMany([{"topic_id":1,"name":"HTML","description":"HTML","date":new Date("2020-10-15")},
{"topic_id":2,"name":"CSS","description":"CSS","date":new Date("2020-10-16")},
{"topic_id":3,"name":"Javascript","description":"Javascript","date":new Date("2020-10-17")},
{"topic_id":4,"name":"ReactJS","description":"ReactJS","date":new Date("2020-10-18")},
{"topic_id":5,"name":"MySQL","description":"MYSQL","date":new Date("2020-10-19")}]);

db.topics.find();
[
  {
    _id: ObjectId("64cc807bab9ff5bd09f99b5b"),
    topic_id: 1,
    name: 'HTML',
    description: 'HTML',
    date: ISODate("2020-10-15T00:00:00.000Z")
  },
  {
    _id: ObjectId("64cc807bab9ff5bd09f99b5c"),
    topic_id: 2,
    name: 'CSS',
    description: 'CSS',
    date: ISODate("2020-10-16T00:00:00.000Z")
  },
  {
    _id: ObjectId("64cc807bab9ff5bd09f99b5d"),
    topic_id: 3,
    name: 'Javascript',
    description: 'Javascript',
    date: ISODate("2020-10-17T00:00:00.000Z")
  },
  {
    _id: ObjectId("64cc807bab9ff5bd09f99b5e"),
    topic_id: 4,
    name: 'ReactJS',
    description: 'ReactJS',
    date: ISODate("2020-10-18T00:00:00.000Z")
  },
  {
    _id: ObjectId("64cc807bab9ff5bd09f99b5f"),
    topic_id: 5,
    name: 'MySQL',
    description: 'MYSQL',
    date: ISODate("2020-10-19T00:00:00.000Z")
  }
]


db.tasks.insertMany([{"taskId":1,"name":"create-react-app","description":"create-react-app","date":new Date("2020-10-17"),"submitted":[1,3,4],"not_submitted":[2,5]},
{"taskId":2,"name":"MySQL tables","description":"create tables in MySQL","date":new Date("2020-10-18"),"submitted":[1,3,4],"not_submitted":[2,5]},
{"taskId":3,"name":"HTML forms","description":"create a form in HTML","date":new Date("2020-10-19"),"submitted":[1,3,4],"not_submitted":[2,5]},
{"taskId":4,"name":"API","description":"write code to fetch data from API","date":new Date("2020-10-20"),"submitted":[1,3,4],"not_submitted":[2,5]},
{"taskId":5,"name":"CSS","description":"design a responsive page","date":new Date("2020-10-21"),"submitted":[1,3,4],"not_submitted":[2,5]}]);

db.tasks.find();
[
  {
    _id: ObjectId("64cc833bab9ff5bd09f99b60"),
    taskId: 1,
    name: 'create-react-app',
    description: 'create-react-app',
    date: ISODate("2020-10-17T00:00:00.000Z"),
    submitted: [ 1, 3, 4 ],
    not_submitted: [ 2, 5 ]
  },
  {
    _id: ObjectId("64cc833bab9ff5bd09f99b61"),
    taskId: 2,
    name: 'MySQL tables',
    description: 'create tables in MySQL',
    date: ISODate("2020-10-18T00:00:00.000Z"),
    submitted: [ 1, 3, 4 ],
    not_submitted: [ 2, 5 ]
  },
  {
    _id: ObjectId("64cc833bab9ff5bd09f99b62"),
    taskId: 3,
    name: 'HTML forms',
    description: 'create a form in HTML',
    date: ISODate("2020-10-19T00:00:00.000Z"),
    submitted: [ 1, 3, 4 ],
    not_submitted: [ 2, 5 ]
  },
  {
    _id: ObjectId("64cc833bab9ff5bd09f99b63"),
    taskId: 4,
    name: 'API',
    description: 'write code to fetch data from API',
    date: ISODate("2020-10-20T00:00:00.000Z"),
    submitted: [ 1, 3, 4 ],
    not_submitted: [ 2, 5 ]
  },
  {
    _id: ObjectId("64cc833bab9ff5bd09f99b64"),
    taskId: 5,
    name: 'CSS',
    description: 'design a responsive page',
    date: ISODate("2020-10-21T00:00:00.000Z"),
    submitted: [ 1, 3, 4 ],
    not_submitted: [ 2, 5 ]
  }
]


db.company_drive.insertMany([{"id":1,"company_name":"company1","interview_date":new Date("2020-10-10"),"student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},
{"id":2,"company_name":"company2","interview_date":new Date("2020-10-14"),"student_id_list":[17,18,19,20]},
{"id":3,"company_name":"company3","interview_date":new Date("2020-10-17"),"student_id_list":[21,22,23,24]},
{"id":4,"company_name":"company4","interview_date":new Date("2020-10-20"),"student_id_list":[25,26,27,29]},
{"id":5,"company_name":"company5","interview_date":new Date("2020-10-29"),"student_id_list":[30,31,33,34]}]);

db.company_drive.find();
[
  {
    _id: ObjectId("64cc8408ab9ff5bd09f99b65"),
    id: 1,
    company_name: 'company1',
    interview_date: ISODate("2020-10-10T00:00:00.000Z"),
    student_id_list: [
       1,  2,  3,  4,  5,  6,
       7,  8,  9, 10, 11, 12,
      13, 14, 15, 16
    ]
  },
  {
    _id: ObjectId("64cc8408ab9ff5bd09f99b66"),
    id: 2,
    company_name: 'company2',
    interview_date: ISODate("2020-10-14T00:00:00.000Z"),
    student_id_list: [ 17, 18, 19, 20 ]
  },
  {
    _id: ObjectId("64cc8408ab9ff5bd09f99b67"),
    id: 3,
    company_name: 'company3',
    interview_date: ISODate("2020-10-17T00:00:00.000Z"),
    student_id_list: [ 21, 22, 23, 24 ]
  },
  {
    _id: ObjectId("64cc8408ab9ff5bd09f99b68"),
    id: 4,
    company_name: 'company4',
    interview_date: ISODate("2020-10-20T00:00:00.000Z"),
    student_id_list: [ 25, 26, 27, 29 ]
  },
  {
    _id: ObjectId("64cc8408ab9ff5bd09f99b69"),
    id: 5,
    company_name: 'company5',
    interview_date: ISODate("2020-10-29T00:00:00.000Z"),
    student_id_list: [ 30, 31, 33, 34 ]
  }
]


db.mentors.insertMany([{"mentor_id":1,"mentor_name":"mentor1","email":"mentor1@gmail.com","student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},
{"mentor_id":2,"mentor_name":"mentor2","email":"mentor2@gmail.com","student_id_list":[17,18,19,20]},
{"mentor_id":3,"mentor_name":"mentor3","email":"mentor3@gmail.com","student_id_list":[21,22,23,24]},
{"mentor_id":4,"mentor_name":"mentor4","email":"mentor4@gmail.com","student_id_list":[25,26,27,29]},
{"mentor_id":5,"mentor_name":"mentor5","email":"mentor5@gmail.com","student_id_list":[30,31,33,34]}]);

db.mentors.find();
[
  {
    _id: ObjectId("64cc84f1ab9ff5bd09f99b6a"),
    mentor_id: 1,
    mentor_name: 'mentor1',
    email: 'mentor1@gmail.com',
    student_id_list: [
       1,  2,  3,  4,  5,  6,
       7,  8,  9, 10, 11, 12,
      13, 14, 15, 16
    ]
  },
  {
    _id: ObjectId("64cc84f1ab9ff5bd09f99b6b"),
    mentor_id: 2,
    mentor_name: 'mentor2',
    email: 'mentor2@gmail.com',
    student_id_list: [ 17, 18, 19, 20 ]
  },
  {
    _id: ObjectId("64cc84f1ab9ff5bd09f99b6c"),
    mentor_id: 3,
    mentor_name: 'mentor3',
    email: 'mentor3@gmail.com',
    student_id_list: [ 21, 22, 23, 24 ]
  },
  {
    _id: ObjectId("64cc84f1ab9ff5bd09f99b6d"),
    mentor_id: 4,
    mentor_name: 'mentor4',
    email: 'mentor4@gmail.com',
    student_id_list: [ 25, 26, 27, 29 ]
  },
  {
    _id: ObjectId("64cc84f1ab9ff5bd09f99b6e"),
    mentor_id: 5,
    mentor_name: 'mentor5',
    email: 'mentor5@gmail.com',
    student_id_list: [ 30, 31, 33, 34 ]
  }
]


QUERIES:

1) Find all the topics and tasks which are thought in the month of October

tasks : db.tasks.find({"date":{$gte:ISODate("2020-10-01"),$lt:ISODate("2020-10-31")}});
topics : db.topics.find({"date":{$gte:ISODate("2020-10-01"),$lt:ISODate("2020-10-31")}});

2) Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.company_drive.find({"interview_date":{$gte:ISODate("2020-10-15"),$lt:ISODate("2020-10-31")}});

3) Find all the company drives and students who are appeared for the placement.

db.company_drive.find({},{company_name:1,student_id_list:1,_id:0});

4) Find the number of problems solved by the user in codekata

db.users.aggregate([{$project:{codekata_solved:1,userId:1,_id:0}}]);

5) Find all the mentors with who has the mentee's count more than 15

db.mentors.find({$where:"this.student_id_list.length > 15"},{mentor_id:1,_id:0});

6) Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

attendance : db.attendance.aggregate([{$match:{"date":{$gte:ISODate("2020-10-15"),$lt:ISODate("2020-10-31")}}},{$project:{_id:0,date:1,id:1,no_of_absent: {$size: "$absent"}}}])
tasks : db.tasks.aggregate([{$match:{"date":{$gte:ISODate("2020-10-15"),$lt:ISODate("2020-10-31")}}},{$project:{task_not_submitted:{$size:"$not_submitted"}}}])